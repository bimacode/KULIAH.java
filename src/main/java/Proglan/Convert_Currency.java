package Proglan;


import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.util.Locale;
import javax.swing.JOptionPane;
import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
import javafx.scene.control.TextField;

/**
 *
 * @author Kukuh Wildan
 */

public class Convert_Currency extends javax.swing.JFrame {

    /**
     * Creates new form Convert_Currency
     */
//    public static void numericOnly(final TextField field) {
//        field.textProperty().addListener(new ChangeListener<String>() {
//            @Override
//            public void changed(
//                    ObservableValue<? extends String> observable,
//                    String oldValue, String newValue) {
//                if (!newValue.matches("\\d*")) {
//                    field.setText(newValue.replaceAll("[^\\d]", ""));
//                }
//            }
//        });
//    }
    public Convert_Currency() {

        initComponents();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        txthasil = new javax.swing.JTextField();
        txtfrom = new javax.swing.JComboBox<>();
        txtto = new javax.swing.JComboBox<>();
        txtamount = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        convertTo = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        HASIL = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(122, 114, 120));

        txtfrom.setFont(new java.awt.Font("Be Vietnam", 0, 12)); // NOI18N
        txtfrom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "USD", "JPY", "BAHT", "IDR" }));
        txtfrom.setBorder(null);

        txtto.setFont(new java.awt.Font("Be Vietnam", 0, 12)); // NOI18N
        txtto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "USD", "JPY", "BAHT", "IDR" }));
        txtto.setBorder(null);

        txtamount.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtamount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtamountActionPerformed(evt);
            }
        });
        txtamount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtamountKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Be Vietnam Medium", 0, 14)); // NOI18N
        jLabel1.setText("Jumlah yang mau di convert :");

        jLabel2.setFont(new java.awt.Font("Be Vietnam Medium", 0, 14)); // NOI18N
        jLabel2.setText("Hasil Convert :");

        convertTo.setBackground(new java.awt.Color(18, 83, 112));
        convertTo.setFont(new java.awt.Font("Be Vietnam SemiBold", 0, 12)); // NOI18N
        convertTo.setForeground(new java.awt.Color(255, 255, 255));
        convertTo.setText("Convert");
        convertTo.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        convertTo.setBorderPainted(false);
        convertTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertToActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Be Vietnam Medium", 0, 12)); // NOI18N
        jButton2.setText("Exit");
        jButton2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Be Vietnam ExtraBold", 0, 24)); // NOI18N
        jLabel3.setText("Konverter Uang.");

        jLabel4.setFont(new java.awt.Font("Be Vietnam Medium", 0, 14)); // NOI18N
        jLabel4.setText("Dari :");

        jLabel5.setFont(new java.awt.Font("Be Vietnam Medium", 0, 14)); // NOI18N
        jLabel5.setText("Ke :");

        HASIL.setFont(new java.awt.Font("Be Vietnam Medium", 0, 12)); // NOI18N
        HASIL.setText(".");
        HASIL.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                HASILHierarchyChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(HASIL, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(txtfrom, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(txtto, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                .addGap(41, 41, 41))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(txtamount, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel1)
                                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(convertTo, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addGap(4, 4, 4)
                                                .addComponent(txtfrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addGap(3, 3, 3)
                                                .addComponent(txtto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtamount, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(HASIL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(convertTo, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                                                .addGap(5, 5, 5)))
                                .addContainerGap(52, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>

    private void txtamountActionPerformed(java.awt.event.ActionEvent evt) {


    }

    private void convertToActionPerformed(java.awt.event.ActionEvent evt) {

        Double hasil;
        Double amount = Double.parseDouble(txtamount.getText());



//        From USD
        if (txtfrom.getSelectedItem().toString() == "USD" && txtto.getSelectedItem().toString() == "JPY"){
            hasil = amount * 135.68500;
            DecimalFormat df = new DecimalFormat("##,###.##");
            String jumlah = df.format(amount);
            String result = df.format(hasil);
            HASIL.setText(" " + jumlah + " USD = " + result + " JPY" );
            //            DecimalFormat formatter = (DecimalFormat) NumberFormat.getNumberInstance();
//            DecimalFormatSymbols symbols = formatter.getDecimalFormatSymbols();
//            symbols.setGroupingSeparator(' ');
//            formatter.setDecimalFormatSymbols(symbols);
//            System.out.println(formatter.format(hasil.longValue()));
//            txthasil.setText(hasil.toString());
//          String AMOUNT = String.format("%,d", amount);
//          String convert = String.format("%,d", hasil);
        }
        else if (txtfrom.getSelectedItem().toString() == "USD" && txtto.getSelectedItem().toString() == "BAHT"){
            hasil = amount * 34.78000;
            DecimalFormat df = new DecimalFormat("##,###.##");
            String jumlah = df.format(amount);
            String result = df.format(hasil);
            HASIL.setText(" " + jumlah + " USD = " + result + " BAHT" );
        }
        else if (txtfrom.getSelectedItem().toString() == "USD" && txtto.getSelectedItem().toString() == "IDR"){
            hasil = amount * 15617.00000;
            DecimalFormat df = new DecimalFormat("##,###.##");
            String jumlah = df.format(amount);
            String result = df.format(hasil);
            HASIL.setText(" " + jumlah + " USD = " + result + " IDR" );
        }
        else if (txtfrom.getSelectedItem().toString() == "USD" && txtto.getSelectedItem().toString() == "USD"){
            hasil = amount * 1;
            DecimalFormat df = new DecimalFormat("##,###.##");
            String jumlah = df.format(amount);
            String result = df.format(hasil);
            HASIL.setText(" " + jumlah + " USD = " + result + " USD" );
        }

//        FROM JPY

        if (txtfrom.getSelectedItem().toString() == "JPY" && txtto.getSelectedItem().toString() == "USD"){
            hasil = amount * 0.007370;
            DecimalFormat df = new DecimalFormat("##,###.##");
            String jumlah = df.format(amount);
            String result = df.format(hasil);
            HASIL.setText(" " + jumlah + " JPY = " + result + " USD" );
        }
        else if (txtfrom.getSelectedItem().toString() == "JPY" && txtto.getSelectedItem().toString() == "BAHT"){
            hasil = amount * 0.25684;
            DecimalFormat df = new DecimalFormat("##,###.##");
            String jumlah = df.format(amount);
            String result = df.format(hasil);
            HASIL.setText(" " + jumlah + " JPY = " + result + " BAHT" );
        }
        else if (txtfrom.getSelectedItem().toString() == "JPY" && txtto.getSelectedItem().toString() == "IDR"){
            hasil = amount * 115.02400;
            DecimalFormat df = new DecimalFormat("##,###.##");
            String jumlah = df.format(amount);
            String result = df.format(hasil);
            HASIL.setText(" " + jumlah + " JPY = " + result + " IDR" );
        }
        else if (txtfrom.getSelectedItem().toString() == "JPY" && txtto.getSelectedItem().toString() == "JPY"){
            hasil = amount * 1;
            DecimalFormat df = new DecimalFormat("##,###.##");
            String jumlah = df.format(amount);
            String result = df.format(hasil);
            HASIL.setText(" " + jumlah + " JPY = " + result + " JPY" );
        }

//        From BAHT
        if (txtfrom.getSelectedItem().toString() == "BAHT" && txtto.getSelectedItem().toString() == "USD"){
            hasil = amount * 0.02867;
            DecimalFormat df = new DecimalFormat("##,###.##");
            String jumlah = df.format(amount);
            String result = df.format(hasil);
            HASIL.setText(" " + jumlah + " BAHT = " + result + " USD" );
        }
        else if (txtfrom.getSelectedItem().toString() == "BAHT" && txtto.getSelectedItem().toString() == "JPY"){
            hasil = amount * 3.89292;
            DecimalFormat df = new DecimalFormat("##,###.##");
            String jumlah = df.format(amount);
            String result = df.format(hasil);
            HASIL.setText(" " + jumlah + " BAHT = " + result + " JPY" );
        }
        else if (txtfrom.getSelectedItem().toString() == "BAHT" && txtto.getSelectedItem().toString() == "IDR"){
            hasil = amount * 447.77800;
            DecimalFormat df = new DecimalFormat("##,###.##");
            String jumlah = df.format(amount);
            String result = df.format(hasil);
            HASIL.setText(" " + jumlah + " BAHT = " + result + " IDR" );
        }
        else if (txtfrom.getSelectedItem().toString() == "BAHT" && txtto.getSelectedItem().toString() == "BAHT"){
            hasil = amount * 1;
            DecimalFormat df = new DecimalFormat("##,###.##");
            String jumlah = df.format(amount);
            String result = df.format(hasil);
            HASIL.setText(" " + jumlah + " BAHT = " + result + " BAHT" );
        }


//        FROM IDR
        if (txtfrom.getSelectedItem().toString() == "IDR" && txtto.getSelectedItem().toString() == "USD"){
            hasil = amount *0.000067;

            DecimalFormat df = new DecimalFormat("##,###.##");
            String jumlah = df.format(amount);
            String result = df.format(hasil);
            HASIL.setText(" " + jumlah + " IDR = " + result + " USD" );
        }
        else if (txtfrom.getSelectedItem().toString() == "IDR" && txtto.getSelectedItem().toString() == "JPY"){
            hasil = amount * 0.00869;

            DecimalFormat df = new DecimalFormat("##,###.##");
            String jumlah = df.format(amount);
            String result = df.format(hasil);
            HASIL.setText(" " + jumlah + " IDR = " + result + " JPY" );
        }
        else if (txtfrom.getSelectedItem().toString() == "IDR" && txtto.getSelectedItem().toString() == "BAHT"){
            hasil = amount * 0.00223;

            DecimalFormat df = new DecimalFormat("##,###.##");
            String jumlah = df.format(amount);
            String result = df.format(hasil);
            HASIL.setText(" " + jumlah + " IDR = " + result + " BAHT" );
        }
        else if (txtfrom.getSelectedItem().toString() == "IDR" && txtto.getSelectedItem().toString() == "IDR"){
            hasil = amount * 1;

            DecimalFormat df = new DecimalFormat("##,###.##");
            String jumlah = df.format(amount);
            String result = df.format(hasil);
            HASIL.setText(" " + jumlah + " IDR = " + result + " IDR" );
        }



    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        int choice = JOptionPane.showConfirmDialog(null,"Apakah anda mau keluar ???","Exit",JOptionPane.YES_NO_OPTION);
        if(choice==0) {
            dispose();
            System.exit(0);
        }
    }

    private void txtamountKeyTyped(java.awt.event.KeyEvent evt) {
        txtamount.addKeyListener(new KeyAdapter(){
            @Override
            public void keyTyped(KeyEvent e){
                char input = e.getKeyChar();
                if ((input < '0' || input > '9') && input != '\b'){
                    e.consume();
                    HASIL.setText("Invalid Character");
//                    System.out.print("Invalid Character");
                }
            }

        });
    }

    private void HASILHierarchyChanged(java.awt.event.HierarchyEvent evt) {


    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Convert_Currency.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Convert_Currency.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Convert_Currency.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Convert_Currency.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Convert_Currency().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JLabel HASIL;
    private javax.swing.JButton convertTo;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txtamount;
    private javax.swing.JComboBox<String> txtfrom;
    private javax.swing.JTextField txthasil;
    private javax.swing.JComboBox<String> txtto;
    // End of variables declaration                   
}